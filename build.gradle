group 'com.petukhovsky.services'
version '1.0'

buildscript {
    ext.kotlin_version = '1.3.61'
    ext.spring_boot_version = '1.4.2.RELEASE'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath 'org.springframework:springloaded:1.2.0.RELEASE'
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'
apply plugin: 'docker'

mainClassName = "com.petukhovsky.services.ServicesApplicationKt"

jar {
    baseName = 'services'
    version = version
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-jersey')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-websocket')

    compile("org.springframework.boot:spring-boot-devtools")

    compile("com.github.pengrad:java-telegram-bot-api:2.3.1")

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.module/jackson-module-kotlin
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.8.4'
    compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}")

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

docker {
    baseImage 'frolvlad/alpine-oraclejdk8:slim'
    maintainer 'Arthur Petukhovsky <petuhovskiy@yandex.ru>'
}

task buildDocker(type: Docker, dependsOn: build) {
    volume('/tmp')
    addFile("${jar.baseName}-${version}.jar", "app.jar")
    runCommand("sh -c 'touch /app.jar'")
    entryPoint(["java","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"])
    tag = 'arthur/services'
    push = false
    dryRun = true
    tagVersion = 'latest'
    applicationName = jar.baseName
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}